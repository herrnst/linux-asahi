// SPDX-License-Identifier: GPL-2.0+ OR MIT
/*
 * Apple M2 MacBook Air/Pro (M2, 2022)
 *
 * This file contains parts common to all Apple M2 devices using the t8112.
 *
 * target-type: J493, J413
 *
 * Copyright The Asahi Linux Contributors
 */

/ {
	aliases {
		atcphy0 = &atcphy0;
		atcphy1 = &atcphy1;
		dcp = &dcp;
		disp0 = &display;
		disp0_piodma = &disp0_piodma;
		nvram = &nvram;
		serial0 = &serial0;
		serial2 = &serial2;
	};

	chosen {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		stdout-path = "serial0";

		framebuffer0: framebuffer@0 {
			compatible = "apple,simple-framebuffer", "simple-framebuffer";
			reg = <0 0 0 0>; /* To be filled by loader */
			power-domains = <&ps_disp0_cpu0>;
			/* Format properties will be added by loader */
			status = "disabled";
		};
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;
		/* To be filled by loader */
	};

	memory@800000000 {
		device_type = "memory";
		reg = <0x8 0 0x2 0>; /* To be filled by loader */
	};
};

&serial0 {
	status = "okay";
};

&serial2 {
	status = "okay";
};

&i2c0 {
	status = "okay";

	hpm0: usb-pd@38 {
		compatible = "apple,cd321x";
		reg = <0x38>;
		interrupt-parent = <&pinctrl_ap>;
		interrupts = <8 IRQ_TYPE_LEVEL_LOW>;
		interrupt-names = "irq";

		typec0: connector {
			compatible = "usb-c-connector";
			power-role = "dual";
			data-role = "dual";

			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				port@0 {
					reg = <0>;
					typec0_con_hs: endpoint {
						remote-endpoint = <&typec0_usb_hs>;
					};
				};
				port@1 {
					reg = <1>;
					typec0_con_ss: endpoint {
						remote-endpoint = <&typec0_usb_ss>;
					};
				};
			};
		};
	};

	hpm1: usb-pd@3f {
		compatible = "apple,cd321x";
		reg = <0x3f>;
		interrupt-parent = <&pinctrl_ap>;
		interrupts = <8 IRQ_TYPE_LEVEL_LOW>;
		interrupt-names = "irq";

		typec1: connector {
			compatible = "usb-c-connector";
			power-role = "dual";
			data-role = "dual";

#ifdef ENABLE_DCPEXT_TYPEC
			/* hacks */
			displayport = <&dcpext>;
#endif

			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				port@0 {
					reg = <0>;
					typec1_con_hs: endpoint {
						remote-endpoint = <&typec1_usb_hs>;
					};
				};
				port@1 {
					reg = <1>;
					typec1_con_ss: endpoint {
						remote-endpoint = <&typec1_usb_ss>;
					};
				};
#ifdef ENABLE_DCPEXT_TYPEC
				port@2 {
					reg = <2>;
						typec1_con_dp: endpoint {
						remote-endpoint = <&typec1_dp>;
					};
				};
#endif
			};
		};
	};
};

#ifdef ENABLE_DCPEXT_TYPEC
/ {
	aliases {
		dcpext = &dcpext;
	};
};

&display {
	iommus = <&disp0_dart 0>, <&dispext0_dart 0>;

	port {
		typec1_dp: endpoint {
			remote-endpoint = <&typec1_con_dp>;
		};
	};
};

&dispext0_dart {
	status = "okay";
};

&dcpext_dart {
	status = "okay";
};

&dcpext_mbox {
	status = "okay";
};

&dcpext {
	status = "okay";
	apple,connector-type = "DP";

	/* hacks */
	apple,dptx-phy = <1>;
	phys = <&atcphy1 PHY_TYPE_DP>;
	phy-names = "dp-phy";
	mux-controls = <&atcphy1_xbar 0>;
	mux-control-names = "dp-xbar";
	mux-index = <2>;
};
#endif

/* USB controllers */
&dwc3_0 {
	port {
		typec0_usb_hs: endpoint {
			remote-endpoint = <&typec0_con_hs>;
		};
	};
};

&dwc3_1 {
	port {
		typec1_usb_hs: endpoint {
			remote-endpoint = <&typec1_con_hs>;
		};
	};
};

/* Type-C PHYs */
&atcphy0 {
	port {
		typec0_usb_ss: endpoint {
			remote-endpoint = <&typec0_con_ss>;
		};
	};
};

&atcphy1 {
	port {
		typec1_usb_ss: endpoint {
			remote-endpoint = <&typec1_con_ss>;
		};
	};
};

&i2c1 {
	status = "okay";
};

&i2c2 {
	status = "okay";
};

&i2c3 {
	status = "okay";
};

&nco_clkref {
	clock-frequency = <900000000>;
};

#include "hwmon-common.dtsi"

#include "spi1-nvram.dtsi"
